= render 'posts/user_images', user_images: @user_images
= render 'groups/search', groups: @groups_for_search, search_id: 'modal-post-group-search'
.d-width-wrapper
  = form_with(model: post, url: (post.persisted? ?  post_path(post) : posts_path), local: true) do |f|
    
    .input-group.mb-3
     = f.text_field :image_id, class: 'post-form-image'
     
     .post-form-image-mask#post-form-image-mask
       - if post.image.present?
         img#post-image.post-photo-image style= "display: inline;" src="#{post.image.url}"
         = image_pack_tag 'media/images/icons/ic_add_photo.png', class: 'icon-add-photo', id: 'icon-add-photo', style: 'display:none;'
       - else
         img#post-image.post-photo-image src=""
         = image_pack_tag 'media/images/icons/ic_add_photo.png', class: 'icon-add-photo', id: 'icon-add-photo'
         
    .input-group.mb-3
     = f.text_field :title, autocomplete: 'off', class: 'form-control', placeholder: 'Title', required: true
      
    .input-group.mb-4
      = f.text_area :description, autocomplete: 'off', class: 'form-control', placeholder: 'Event Description', required: true, rows: 2
    
    .material-field.dropdown.mb-3#post-select-dropdown-position
      - if f.object.persisted?
        = f.hidden_field :source, as: :text_field, value: "#{f.object&.source_type}:#{f.object&.source_id}", required: true
        = f.text_field :virtual_source, as: :text_field, value: f.object&.source&.title&.capitalize, class: 'form-control', readonly: true, required: true
      - else
        - group = NewsCategory.find_by(title: 'general')
        = f.hidden_field :source, as: :text_field, value: "NewsCategory:#{group&.id}", required: true
        = f.text_field :virtual_source, as: :text_field, value: group.title&.capitalize, class: 'form-control', readonly: true, required: true
    
    .actions
      = f.submit 'Submit', class: 'btn btn-primary w-100'
